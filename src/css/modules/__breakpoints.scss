// breakpoints props
$breakpoints: (
  xxs-min: 0px,
  xxs-max: 359.98px,
  xs-min: 360px,
  xs-max: 575.98px,
  sm-min: 576px,
  sm-max: 767.98px,
  md-min: 768px,
  md-max: 991.98px,
  lg-min: 992px,
  lg-max: 1199.98px,
  xl-min: 1200px,
  xl-max: 1399.98px,
  xxl-min: 1400px,
) !default;

// media of at least the min breakpoint width
@mixin media-min($lower) {
  @if map-keys($breakpoints) {
    $min: map-get($breakpoints, $lower);
    @if $min {
      @media (min-width: $min) {
        @content;
      }
    } @else {
      @content;
    }
  }
}

// media of at most the maximum breakpoint width
@mixin media-max($upper) {
  @if map-keys($breakpoints) {
    $max: map-get($breakpoints, $upper);
    @if $max {
      @media (max-width: $max) {
        @content;
      }
    } @else {
      @content;
    }
  }
}

// media that spans multiple breakpoint widths
@mixin media-btw($lower, $upper) {
  @if map-keys($breakpoints) {
    $min: map-get($breakpoints, $lower);
    $max: map-get($breakpoints, $upper);
    @if $min != null and $max != null {
      @media (min-width: $min) and (max-width: $max) {
        @content;
      }
    } @else if $max == null {
      @include media-min($lower) {
        @content;
      }
    } @else if $min == null {
      @include media-max($upper) {
        @content;
      }
    }
  }
}

$expressions: (
  fine: (
    pointer: fine,
  ),
  coarse: (
    pointer: coarse,
  ),
  landscape: (
    orientation: landscape,
  ),
  portrait: (
    orientation: portrait,
  ),
);

// media that spans screen texture and orientation
@mixin media-exp($texture) {
  @if map-keys($expressions) {
    $val: map-get($expressions, $texture);
    @if $val {
      @media #{inspect($val)} {
        @content;
      }
    }
  }
}
